<local:VMSDialog x:Class="VMSpc.UI.DlgWindows.Settings.EditAlarmDlg"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VMSpc.UI.DlgWindows"
        xmlns:vs="clr-namespace:VMSpc.UI.CustomComponents"
        mc:Ignorable="d"
        Title="EditAlarmDlg" Height="500" Width="475">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
            <Border Margin="10">
                <ListBox
                Name="GaugeTypes"
                Background="LightGray" 
                SelectionMode="Single" 
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                Width="300"
                SelectionChanged="GaugeTypes_SelectionChanged"
                 >
                <ListBox.Resources>
                    <Style TargetType="{x:Type vs:VMSListBoxItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type vs:VMSListBoxItem}">
                                    <Border x:Name="bd"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}"
                                                Padding="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive"
                                                               Value="False" />
                                                <Condition Property="IsSelected"
                                                               Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background"
                                                        TargetName="bd"
                                                        Value="LightBlue" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive"
                                                               Value="True" />
                                                <Condition Property="IsSelected"
                                                               Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background"
                                                        TargetName="bd"
                                                        Value="LightBlue" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.Resources>
            </ListBox>
            </Border>
            <StackPanel Margin="10">
                <Button Margin="5" VerticalAlignment="Center" x:Name="OkayButton" Click="OkayButton_Click" Height="25" Width="100">Okay</Button>
                <Button Margin="5" VerticalAlignment="Center" x:Name="CancelButton" Click="CancelButton_Click" Height="25" Width="100">Cancel</Button>
            </StackPanel>
        </StackPanel>
        <StackPanel Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Orientation="Horizontal">
            <GroupBox Header="Trigger Condition" Margin="10 0 10 0">
                <UniformGrid Name="RadioCondition" Rows="2">
                    <RadioButton Checked="RadioButton_Checked" x:Name="UnderCondition" GroupName="TriggerCondition" Grid.Row="1" HorizontalAlignment="Left">Under</RadioButton>
                    <RadioButton Checked="RadioButton_Checked" x:Name="OverCondition" GroupName="TriggerCondition" Grid.Row="2" HorizontalAlignment="Left">Over</RadioButton>
                </UniformGrid>
            </GroupBox>
            <GroupBox Header="Alarm Frequency" Margin="10 0 10 0">
                <UniformGrid Name="RadioFrequency" Rows="4">
                    <RadioButton Checked="RadioButton_Checked" GroupName="AlarmFrequency" Grid.Row="1" HorizontalAlignment="Left" Name="TriggerOnce">Once Only</RadioButton>
                    <RadioButton Checked="RadioButton_Checked" GroupName="AlarmFrequency" Grid.Row="1" HorizontalAlignment="Left" Name="TriggerFifteen">Every 15 Seconds</RadioButton>
                    <RadioButton Checked="RadioButton_Checked" GroupName="AlarmFrequency" Grid.Row="1" HorizontalAlignment="Left" Name="TriggerMinute">Every Minute</RadioButton>
                    <RadioButton Checked="RadioButton_Checked" GroupName="AlarmFrequency" Grid.Row="1" HorizontalAlignment="Left" Name="TriggerContinuous">Repeat Continously</RadioButton>
                </UniformGrid>
            </GroupBox>
            <StackPanel Margin="10 0 10 0">
                <Label>Trigger Value</Label>
                <TextBox x:Name="TriggerValueBox" Width="100" Height="20">70</TextBox>
            </StackPanel>
        </StackPanel>
        <StackPanel Grid.Row="2" Margin="10 0 0 0">
            <Label>Name</Label>
            <TextBox x:Name="AlarmNameBox" Width="300" Height="20" HorizontalAlignment="Left" />
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="3">
            <StackPanel Margin="10 0 0 0">
                <Label>Sound File</Label>
                <TextBox x:Name="SoundFile" Height="20" Width="315" IsReadOnly="True" Background="LightGray" />
            </StackPanel>
            <StackPanel Margin="10 0 0 0">
                <Button Height="25" Width="100" Margin="0 10 0 0" Name="BrowseButton" Click="BrowseButton_Click">Browse</Button>
                <Button Height="25" Width="100" Margin="0 10 0 0" Name="TestButton" Click="TestButton_Click">Test</Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</local:VMSDialog>
